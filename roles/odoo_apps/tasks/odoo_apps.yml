- name: "Ensure odoo addon dir exists"
  file:
    path: "{{ odoo_data_dir }}/addons"
    state: directory

- name: "Remove duplicates from app list"
  set_fact:
    odoo_apps: "{{ odoo_apps | unique }}"

- name: "Get odoo app dependencies"
  set_fact:
    odoo_app_dependencies: "{{ odoo_apps | json_query('[*].depends[]') }}"

- name: "Get odoo app names"
  set_fact:
    odoo_app_names: "{{ odoo_apps | json_query('[*].name') | list }}"

- name: "Check odoo app dependencies"
  fail:
    msg: "Missing odoo app {{ item }}"
  when: item not in odoo_app_names
  loop: "{{ odoo_app_dependencies }}"

- name: List apps to be installed
  debug:
    msg: "{{ odoo_app_names | sort }}"
  
- name: "Download {{ role_name }} zip archives"
  get_url:
    url: "{{ odoo_apps_base_url }}{{ item.name }}-{{ item.version }}.zip"
    dest: "{{ odoo_apps_tmp_dir }}/{{ item.name }}-{{ item.version }}.zip"
  loop: "{{ odoo_apps }}"
  when: item.version is defined

- name: "Extract downloaded {{ role_name }} zip archives"
  unarchive:
    src: "{{ odoo_apps_tmp_dir }}/{{ item.name }}-{{ item.version }}.zip"
    dest: "{{ odoo_apps_tmp_dir }}"
    remote_src: true
    list_files: true
  args:
    creates: "{{ odoo_apps_tmp_dir }}/{{ item.name }}-{{ item.version }}"
  loop: "{{ odoo_apps }}"
  register: downloaded_archive_contents
  when: item.version is defined

- name: "Copy downloaded {{ role_name }} to addons dir"
  synchronize:
    src: "{{ odoo_apps_tmp_dir }}/{{ item.name }}-{{ item.version }}/"
    dest: "{{ odoo_data_dir }}/addons/{{ item.name }}/"
    # delete: true # FIXME this does not work properly
  delegate_to: "{{ inventory_hostname }}"
  loop: "{{ odoo_apps }}"
  when: item.version is defined
  notify: Restart odoo container

- name: "Register {{ role_name }} folders" # noqa 306
  command: "ls -1 {{ odoo_data_dir }}/addons/"
  changed_when: false
  register: existing_odoo_apps

- name: "Append odoo_data folders to odoo app names"
  set_fact:
    odoo_app_names: "{{ odoo_app_names + (odoo_data | json_query('[*].module_name') | list) }}"
  when: odoo_data is defined

- name: "Remove unmanaged {{ role_name }} folder"
  file:
    path: "{{ odoo_data_dir }}/addons/{{ item }}"
    state: "absent"
  loop: "{{ existing_odoo_apps.stdout_lines }}"
  when: item not in odoo_app_names and odoo_apps_remove_unmanaged_folders