- name: Ensure nginx data dir exists
  file:
    path: "{{ nginx_data_dir }}"
    state: directory

- name: Copy nginx conf
  template:
    src: templates/nginx-proxy.conf
    dest: "{{ nginx_data_dir }}/{{ item.src_hostname }}.conf"
  vars:
    src_hostname: "{{ item.src_hostname }}"
    dest_hostname: "{{ item.dest_hostname | default('') }}"
    dest_port: "{{ item.dest_port | default('')  }}"
    options: "{{ item.options | default('') }}"
    redirect_hostname: "{{ item.redirect_hostname | default(false) }}"
    redirect_url: "{{ item.redirect_url | default(false) }}"
    ssl: "{{ item.ssl | default(false) }}"
    locations: "{{ item.locations | default(false) }}"
    server_names: "{{ item.server_names | default(false) }}"
  loop: "{{ nginx_proxies }}"
  notify: Restart nginx container

- name: Register nginx conf files # noqa 306
  shell: "ls -1 {{ nginx_data_dir }}/*.conf | xargs -n 1 basename"
  changed_when: no
  register: nginx_proxy_conf_files

- name: Create managed file list from proxy list
  set_fact:
    managed_files: "{{ nginx_proxies | map(attribute='src_hostname') | map('regex_replace', '^(.*)$', '\\1.conf') | list }}"

- name: Remove unmanaged nginx conf files
  file:
    path: "{{ nginx_data_dir }}/{{ item }}"
    state: "absent"
  loop: "{{ nginx_proxy_conf_files.stdout_lines }}"
  when: item not in managed_files

- name: Copy nginx ssl param conf
  copy:
    src: "{{ item }}"
    dest: "{{ certbot_data_dir }}/"
  loop:
    - files/options-ssl-nginx.conf
    - files/ssl-dhparams.pem
    - files/proxy-params.conf