- name: "Ensure {{ role_name }} data dir exists"
  file:
    path: "{{ nginx_data_dir }}/proxies"
    state: directory

- name: "Get list of active {{ role_name }} certs"
  stat:
    path: "{{ certbot_data_dir }}/live/{{ item.src_hostname }}"
  loop: "{{ nginx_proxies }}"
  register: certbot_certs

- name: Create array of active certs
  set_fact:
    certbot_active_certs: "{{ certbot_certs | json_query('results[*] | [?stat.exists==`true`].item.src_hostname') | list }}"

- name: "Copy {{ role_name }} conf"
  template:
    src: templates/nginx-proxy.conf
    dest: "{{ nginx_data_dir }}/proxies/{{ item.src_hostname }}.conf"
  vars:
    src_hostname: "{{ item.src_hostname }}"
    dest_hostname: "{{ item.dest_hostname | default('') }}"
    dest_port: "{{ item.dest_port | default('')  }}"
    options: "{{ item.options | default('') }}"
    redirect_hostname: "{{ item.redirect_hostname | default(false) }}"
    redirect_url: "{{ item.redirect_url | default(false) }}"
    ssl: "{{ item.ssl | default(false) }}"
    locations: "{{ item.locations | default(false) }}"
    server_names: "{{ item.server_names | default(false) }}"
    redirect: "{{ item.redirect | default(true) }}"
  loop: "{{ nginx_proxies }}"
  when: "item.src_hostname in certbot_active_certs"
  notify: Restart nginx container

- name: "Register {{ role_name }} conf files" # noqa 306
  shell: "ls -1 {{ nginx_data_dir }}/proxies/*.conf | xargs -n 1 basename"
  changed_when: no
  register: nginx_proxy_conf_files

- name: Create managed file list from proxy list
  set_fact:
    managed_files: "{{ nginx_proxies | map(attribute='src_hostname') | map('regex_replace', '^(.*)$', '\\1.conf') | list }}"

- name: "Remove unmanaged {{ role_name }} conf files"
  file:
    path: "{{ nginx_data_dir }}/proxies/{{ item }}"
    state: "absent"
  loop: "{{ nginx_proxy_conf_files.stdout_lines }}"
  when: item not in managed_files