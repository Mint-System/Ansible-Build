---
- name: Copy {{ role_name }} scripts
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/local/bin/{{ item }}
    mode: +x
  loop:
    - docker-nginx-reload
    - docker-nginx-enable
    - get-public-ip

- name: Init {{ role_name }} volume vars
  ansible.builtin.set_fact:
    nginx_volumes:
      - "{{ nginx_data_dir }}:/etc/nginx/conf.d"

- name: Append Certbot volume vars
  ansible.builtin.set_fact:
    nginx_volumes: "{{ nginx_volumes + [certbot_data_dir + '/:/etc/letsencrypt/', certbot_data_dir + '/www/:/var/www/certbot/'] }}"
  when: certbot_data_dir is defined

- name: Append Acme.sh volume vars
  ansible.builtin.set_fact:
    nginx_volumes: "{{ nginx_volumes + [acme_sh_data_dir + '/:/etc/nginx/certs/'] }}"
  when: acme_sh_data_dir is defined

- name: Start {{ role_name }} container {{ nginx_hostname }}
  community.docker.docker_container:
    name: "{{ nginx_hostname }}"
    hostname: "{{ role_name }}.internal"
    labels:
      description: "{{ nginx_description }}"
    image: "{{ nginx_image }}"
    restart_policy: unless-stopped
    recreate: false
    ports: "{{ nginx_ports | default([]) }}"
    volumes: "{{ nginx_volumes }}"
    networks:
      - name: "{{ docker_network_name }}"
    network_mode: bridge
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"
      tag: "{{ nginx_hostname }}|{{ role_name }}"
