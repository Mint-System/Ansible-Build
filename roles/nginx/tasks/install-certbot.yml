- name: Check if cert files exist
  stat:
    path: "{{ certbot_data_dir }}/live/{{ item.src_hostname }}"
  loop: "{{ nginx_proxies }}"
  register: certbot_certs

- name: Copy nginx certbot conf
  template:
    src: templates/nginx-certbot.conf
    dest: "{{ nginx_data_dir }}/{{ item.item.src_hostname }}.conf"
  vars:
    server_name: "{{ item.item.src_hostname }}"
  loop: "{{ certbot_certs.results }}"
  when: not item.stat.exists

- name: Start nginx container
  docker_container:
    name: "{{ nginx_hostname }}"
    image: "{{ nginx_image }}"
    ports:
      - 80:80
    volumes:
      - "{{ nginx_data_dir }}/:/etc/nginx/conf.d/:ro"
      - "{{ certbot_data_dir }}/:/etc/letsencrypt/"
      - "{{ certbot_data_dir }}/www/:/var/www/certbot/"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"
  when: certbot_certs | json_query(certbot_stat_filter) | list

- name: Wait for nginx container
  pause:
    seconds: "3"
  when: certbot_certs | json_query(certbot_stat_filter) | list

- name: Issue certificate with certbot command
  docker_container:
    name: "{{ certbot_hostname }}"
    image: "{{ certbot_image }}"
    volumes:
      - "{{ certbot_data_dir }}/:/etc/letsencrypt/"
      - "{{ certbot_data_dir }}/www/:/var/www/certbot/"
    networks:
      - name: "{{ docker_network_name }}"
    command: certonly --webroot --email {{ certbot_email }} --agree-tos --webroot-path=/var/www/certbot/ -d {{ item.item.src_hostname }}
  loop: "{{ certbot_certs.results }}"
  when: not item.stat.exists

- name: Wait for certificate request
  pause:
    seconds: "10"
  when: certbot_certs | json_query(certbot_stat_filter) | list

- name: Remove certbot container
  docker_container:
    name: "{{ certbot_hostname }}"
    state: absent

- name: Copy renew certs script
  template:
    src: renew-certs
    dest: "{{ certbot_data_dir }}/"
    mode: +x

- name: Register renew certs job
  cron:
    name: "Renew certs for {{ nginx_hostname }}"
    special_time: "weekly"
    job: ". {{ certbot_data_dir }}/renew-certs && docker restart {{ nginx_hostname }}"
