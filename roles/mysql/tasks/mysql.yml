---
- name: Create {{ role_name }} volume
  community.docker.docker_volume:
    name: "{{ mysql_volume_name }}"

- name: Ensure {{ role_name }} data dir exists
  ansible.builtin.file:
    path: "{{ mysql_data_dir }}"
    state: directory

- name: Copy {{ role_name }} conf
  ansible.builtin.template:
    src: my.cnf
    dest: "{{ mysql_data_dir }}/my.cnf"
  notify: Restart {{ role_name }} container

- name: Start {{ role_name }} container {{ mysql_hostname }}
  community.docker.docker_container:
    name: "{{ mysql_hostname }}"
    labels:
      description: "{{ mysql_description }}"
    image: "{{ mysql_image }}"
    restart_policy: unless-stopped
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
      MYSQL_DATABASE: "{{ mysql_database }}"
      MYSQL_USER: "{{ mysql_user }}"
      MYSQL_PASSWORD: "{{ mysql_password }}"
    volumes:
      - "{{ mysql_volume_name }}:/var/lib/mysql"
      - "{{ mysql_data_dir }}/my.cnf:/etc/mysql/conf.d/my.cnf"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"
      tag: "{{ mysql_hostname }}|{{ role_name }}"
    memory: "{{ mysql_memory_limit }}"
    memory_swap: "{{ mysql_memory_limit * 2 }}"
  when: mysql_volume_name is defined
