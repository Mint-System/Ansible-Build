- name: "Ensure {{ role_name }} data dir exists"
  file:
    path: "{{ birt_data_dir }}"
    state: directory

- name: "Ensure {{ role_name }} tmp dir exists"
  file:
    path: "/var/tmp/{{ birt_hostname }}"
    state: directory

- name: "Copy {{ role_name }} Dockerfile"
  template:
    src: "templates/{{ item }}"
    dest: "/var/tmp/{{ birt_hostname }}/{{ item }}"
  loop:
    - Dockerfile
    - setup
    - web.xml
    - run_jetty
    - example.rptdesign
  notify: "Build {{ role_name }} custom image"

- name: Run get dependencies script
  script: "get_dependencies"
  args:
    chdir: "/var/tmp/{{ birt_hostname }}"
    creates: "/var/tmp/{{ birt_hostname }}/birt-runtime-4.5.0.war"

- name: Flush handlers
  meta: flush_handlers

- name: "Start {{ role_name }} container {{ birt_hostname }}"
  docker_container:
    name: "{{ birt_hostname }}"
    labels:
      description: "{{ birt_description }}"
    image: birt:custom
    restart_policy: unless-stopped
    recreate: no
    volumes:
      - "{{ birt_data_dir }}:/data_init"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"
      tag: "{{ birt_hostname }}|{{ role_name }}"