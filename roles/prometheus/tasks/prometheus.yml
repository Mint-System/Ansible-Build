- name: "Create {{ role_name }} volume"
  docker_volume:
    name: "{{ prometheus_volume_name }}"

- name: "Ensure {{ role_name }} data dir exists"
  file:
    path: "{{ prometheus_data_dir }}"
    state: directory

- name: "Extract and filter blackbox target hostnames"
  set_fact:
    src_hostnames: "{{ groups['all'] | map('extract', hostvars) | json_query('[*].nginx_proxies[?monitor!=`false` && monitor!=null].src_hostname') | flatten }}"

- name: "Extract and filter blackbox target paths"
  set_fact:
    paths: "{{ groups['all'] | map('extract', hostvars) | json_query('[*].nginx_proxies[?monitor!=`false` && monitor!=null].monitor') | flatten }}"

- name: "Generate blackbox target urls"
  set_fact:
    targets: "{{ src_hostnames | zip(paths) | map('join', '') | map('regex_replace', '^(.*)$', 'https://\\1') }}"

- name: List blackbox targets
  debug:
    msg: "{{ targets }}"

- name: "Copy {{ role_name }} conf"
  template:
    src: prometheus.yml
    dest: "{{ prometheus_data_dir }}/"
  notify: "Restart {{ role_name }} container"

- name: "Start {{ role_name }} container {{ prometheus_hostname }}"
  docker_container:
    name: "{{ prometheus_hostname }}"
    labels:
      description: "{{ prometheus_description }}"
    image: "{{ prometheus_image }}"
    restart_policy: unless-stopped
    command: "--storage.tsdb.retention.time={{ prometheus_retention_time }} --config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - "{{ prometheus_volume_name }}:/prometheus"
      - "{{ prometheus_data_dir }}/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "{{ prometheus_port }}:9090"
    networks:
      - name: "{{ docker_network_name }}"
    etc_hosts: "{{ prometheus_etc_hosts }}"
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"
      tag: "{{ prometheus_hostname }}|{{ role_name }}"