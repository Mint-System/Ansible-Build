---
- name: Create {{ role_name }} volume
  community.docker.docker_volume:
    name: "{{ crowdsec_volume_name }}"

- name: Create {{ role_name }} config volume
  community.docker.docker_volume:
    name: "{{ crowdsec_volume_name }}_config"

- name: Ensure {{ role_name }} data dir exists
  ansible.builtin.file:
    path: "{{ crowdsec_data_dir }}/{{ item }}"
    state: directory
  loop:
    - acquis.d
    - parsers/s02-enrich

- name: Copy {{ role_name }} conf
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ crowdsec_data_dir }}/acquis.d/{{ item }}"
  loop:
    - nginx.yaml
    - syslog.yaml
    - journalctl.yaml
  notify: Restart {{ role_name }} container

- name: Copy {{ role_name }} parser conf
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ crowdsec_data_dir }}/parsers/s02-enrich/{{ item }}"
  loop:
    - 01-my-whitelist.yaml
  when: crowdsec_whitelist_ip_addresses is defined
  notify: Restart {{ role_name }} container

- name: Init {{ role_name }} env vars
  ansible.builtin.set_fact:
    crowdsec_env:
      COLLECTIONS: crowdsecurity/nginx
      GID: ${GID-1000}
      ENROLL_KEY: "{{ vault_crowdsec_enroll_key }}"
      ENROLL_INSTANCE_NAME: "{{ inventory_hostname }}"

- name: Collect {{ role_name }} bouncer keys
  set_fact:
    bouncer_key_env: "{{ groups['all'] | map('extract', hostvars) | json_query('[?crowdsec_firewall_bouncer_enabled && crowdsec_firewall_bouncer_enabled==`true`].{key:
      inventory_hostname, value: vault_crowdsec_firewall_bouncer_key}') | list }}"

- name: Append {{ role_name }} bouncer keys as env vars
  ansible.builtin.set_fact:
    crowdsec_env: "{{ crowdsec_env | combine({ 'BOUNCER_KEY_firewall_' + item.key: item.value }) }}"
  loop: "{{ bouncer_key_env }}"

- name: Start {{ role_name }} container {{ crowdsec_hostname }}
  community.docker.docker_container:
    name: "{{ crowdsec_hostname }}"
    labels:
      description: "{{ crowdsec_description }}"
    image: "{{ crowdsec_image }}"
    restart_policy: unless-stopped
    env: "{{ crowdsec_env }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log:/var/log:ro
      - "{{ crowdsec_volume_name }}:/var/lib/crowdsec/data/"
      - "{{ crowdsec_volume_name }}_config:/etc/crowdsec/"
      - "{{ crowdsec_data_dir }}/acquis.d:/etc/crowdsec/acquis.d/"
      - "{{ crowdsec_data_dir }}/parsers:/etc/crowdsec/parsers/"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"
      tag: "{{ crowdsec_hostname }}|{{ role_name }}"
