- name: "Create {{ role_name }} volume"
  docker_volume:
    name: "{{ odoo_volume_name }}"

- name: "Ensure {{ role_name }} data dir exists"
  file:
    path: "{{ odoo_data_dir }}"
    state: directory

- name: "Copy {{ role_name }} conf"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: "templates/odoo.conf", dest: "{{ odoo_data_dir }}/odoo.conf" }
  notify: Restart odoo container

- name: "Pull {{ role_name }} image"
  docker_image:
    name: "{{ odoo_image }}"
    source: pull
    force_source: yes
  register: pull_odoo_image

- name: "Tag {{ role_name }} image"
  command: "docker tag {{ pull_odoo_image.image.Id[7:19] }} odoo:{{ pull_odoo_image.image.Id[7:19] }}"
  when: pull_odoo_image.image.RepoTags | length == 0

# FIXME: Allow normal tags to select image
- name: "Start {{ role_name }} container {{ odoo_hostname }}"
  docker_container:
    name: "{{ odoo_hostname }}"
    labels:
      description: "{{ odoo_description }}"
    image: "odoo:{{ pull_odoo_image.image.Id[7:19] }}"
    restart_policy: unless-stopped
    recreate: no
    env:
      HOST: "{{ odoo_postgres_hostname }}"
      USER: "{{ odoo_postgres_user }}"
      PASSWORD: "{{ odoo_postgres_password }}"
      TZ: "{{ odoo_timezone }}"
    ports: "{{ odoo_ports | default([]) }}"
    volumes:
      - "{{ odoo_volume_name }}:/var/lib/odoo"
      - "{{ odoo_data_dir }}/odoo.conf:/etc/odoo/odoo.conf:ro"
      - "{{ odoo_data_dir }}/addons:/mnt/extra-addons"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"

- name: "Ensure {{ role_name }} master password is in environment"
  lineinfile:
    dest: "/etc/environment"
    state: present
    regexp: "^ODOO_MASTER_PASSWORD="
    line: "ODOO_MASTER_PASSWORD={{ odoo_master_password }}"
  when: odoo_master_password is defined

- name: "Include {{ role_name }} backup from restic client role"
  include_role:
    name: restic-client
    tasks_from: restic-client-odoo-backup
  vars:
    restic_backup_sets: "{{ odoo_backup_sets }}"
  when: odoo_backup_sets