#!/bin/bash
set -e

# Get script name
SCRIPT=$(basename "$0")
VERSION="1.1.0"

# Display Help
Help() {
  echo
  echo "$SCRIPT"
  echo
  echo "Description: Run jobs from crontab managed by Ansible."
  echo "Syntax: $SCRIPT [-n|-i|-V|help]"
  echo "Example: $SCRIPT -n 'Renew certs for nginx08'"
  echo "options:"
  echo "  -n    Name of Ansible cron job."
  echo "  -id   ID of the Ansible cron job."
  echo "  -V    Show $SCRIPT version."
  echo "  help  Show $SCRIPT manual."
  echo
}

# Show help and exit
if [[ "$1" == "help" ]]; then
    Help
    exit
fi

# Process params
while getopts ":n: :i: :V" opt; do
  case $opt in
    n) ANSIBLE_CRON_NAME="#Ansible: $OPTARG";;
    i) ANSIBLE_CRON_ID=$OPTARG;;
    V) echo "$SCRIPT version $VERSION"
    exit 0
    ;;
    \?) echo "Invalid option -$OPTARG" >&2
    Help
    exit 1;;
  esac
done

if [[ -z "$ANSIBLE_CRON_NAME" && -z "$ANSIBLE_CRON_ID" ]]; then
  echo "Error: You must specify either -n <name> or -i <id>."
  exit 1
fi

ANSIBLE_CRON_JOBS=$(crontab -l | awk '
  BEGIN { job_num = 1 }
  /^#Ansible: / {
    name=$2;
    getline;
    print job_num++ "|" name "|" substr($0, index($0, $6));
  }
')

if [[ -n "$ANSIBLE_CRON_NAME" ]]; then
  COMMAND=$(echo "$ANSIBLE_CRON_JOBS" | awk -F'|' -v name="$ANSIBLE_CRON_NAME" '$2 == name { print $3 }')
elif [[ -n "$ANSIBLE_CRON_ID" ]]; then
  COMMAND=$(echo "$ANSIBLE_CRON_JOBS" | awk -F'|' -v id="$ANSIBLE_CRON_ID" '$1 == id { print $3 }')
fi

if [[ -z "$COMMAND" ]]; then
  echo "Error: Cron job not found. Maybe try another user?"
  exit 1
fi

echo "Running command: $COMMAND"
echo ""
eval "$COMMAND"