---
- name: Add groups
  ansible.builtin.group:
    name: "{{ item.name }}"
    state: present
  loop: "{{ iam_groups }}"

- name: Apply sudoers commands
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: ^%{{ item.name }}
    line: "%{{ item.name }} ALL=(ALL) NOPASSWD: {{ item.sudoers_commands }}"
    validate: "visudo -cf %s"
  when: item.sudoers_commands is defined
  loop: "{{ iam_groups }}"

- name: Check if sshd exists
  ansible.builtin.stat:
    path: /run/sshd
  register: sshd_stat

- name: Disallow root ssh access
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^PermitRootLogin
    line: PermitRootLogin no
    state: present
    validate: "/usr/sbin/sshd -t -f %s"
  notify: Restart ssh service
  when:
    - sshd_stat.stat.exists
    - iam_disallow_ssh_root_access

- name: Enable ssh password authentication
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^PasswordAuthentication
    line: PasswordAuthentication yes
    state: present
    validate: "/usr/sbin/sshd -t -f %s"
  notify: Restart ssh service
  when:
    - sshd_stat.stat.exists
    - iam_allow_ssh_password_authentication

- name: Disable ssh password authentication
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^PasswordAuthentication
    line: PasswordAuthentication no
    state: present
    validate: "/usr/sbin/sshd -t -f %s"
  notify: Restart ssh service
  when:
    - sshd_stat.stat.exists
    - not iam_allow_ssh_password_authentication
