- name: Check metricbeat setup
  command: >
    /bin/bash -c 'curl -X GET "{{ metricbeat_elasticsearch_username }}:
    {{ metricbeat_elasticsearch_password }}@
    localhost:9200/_cat/templates?v&s=name&pretty" | grep metricbeat'
  ignore_errors: yes
  changed_when: false
  when: metricbeat_setup
  register: check_metricbeat_setup

- name: Run metricbeat setup
  docker_container:
    name: "{{ metricbeat_hostname }}"
    labels:
      description: "{{ metricbeat_description }}"
    image: "{{ metricbeat_image }}"
    detach: false
    cleanup: true
    command: >
      setup --index-management -E setup.kibana.host="{{ metricbeat_kibana_host }}:5601"
      -E setup.kibana.username="{{ metricbeat_kibana_username }}"
      -E setup.kibana.password="{{ metricbeat_kibana_password }}"
      -E output.elasticsearch.hosts=["{{ metricbeat_elasticsearch_hostname }}:9200"]
      -E output.elasticsearch.username="{{ metricbeat_elasticsearch_username }}"
      -E output.elasticsearch.password="{{ metricbeat_elasticsearch_password }}"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"
  when: metricbeat_setup and check_metricbeat_setup.failed

- name: Ensure metricbeat data dir exists
  file:
    path: "{{ metricbeat_data_dir }}"
    state: directory
  when: metricbeat_data_dir is defined

- name: Copy metricbeat conf
  template:
    src: metricbeat.yml
    dest: "{{ metricbeat_data_dir }}/"
  notify: Restart metricbeat container

- name: "Start metricbeat container {{ metricbeat_hostname }}"
  docker_container:
    name: "{{ metricbeat_hostname }}"
    labels:
      description: "{{ metricbeat_description }}"
    image: "{{ metricbeat_image }}"
    user: root
    env:
      system.hostfs: /hostfs
    volumes:
      - "{{ metricbeat_data_dir }}/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml"
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"