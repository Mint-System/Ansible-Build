#!/bin/bash
set -e

# Get script name
SCRIPT=$(basename "$0")
VERSION="1.1.0"

# Display Help
Help() {
    echo
    echo "$SCRIPT"
    echo
    echo "Description: Update Odoo modules in Docker container."
    echo "Syntax: $SCRIPT [-c|-d|-u|-V|help]"
    echo "Example: $SCRIPT -c odoo01 -d erp -u hr_timesheet "
    echo "options:"
    echo "  -c    Docker container. Defaults to 'odoo'."
    echo "  -d    Database name."
    echo "  -u    List of odoo modules to update."
    echo "  -V    Show $SCRIPT version."
    echo "  help  Show $SCRIPT manual."
    echo
}

# Show help and exit
if [[ "$1" == "help" ]]; then
    Help
    exit
fi

# Process params
while getopts ":c: :d: :u: :V" opt; do
    case $opt in
        c) CONTAINER="$OPTARG";;
        d) DATABASE="$OPTARG";;
        u) MODULES="$OPTARG";;
        V) echo "$SCRIPT version $VERSION"
        exit 0
        ;;
        \?) echo "Invalid option -$OPTARG" >&2
        Help
        exit;;
    esac
done

# Fallback to environment vars and default values
: ${CONTAINER:='odoo'}

# Verify variables
[[ -z "$DATABASE" ]] && { echo "Parameter -d|database is empty" ; exit 1; }
[[ -z "$MODULES" ]] && { echo "Parameter -i|install is empty" ; exit 1; }

# Switch container name with id
CONTAINER_ID=$(docker ps -f "name=$CONTAINER" -q | tail -n1)
[[ -z "$CONTAINER_ID" ]] && { echo "Container id for $CONTAINER not found." ; exit 1; }

# Set alias
docker_exec_bash="docker exec $CONTAINER_ID /bin/bash -c"

# Update with Docker exec
echo "Update modules $MODULES on database $DATABASE."
$docker_exec_bash "odoo -c /etc/odoo/odoo.conf -d $DATABASE -u $MODULES --db_host \$HOST -r \$USER -w \$PASSWORD --stop-after-init --no-http"

