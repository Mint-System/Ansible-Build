#!/bin/bash
set -e

# Get script name
SCRIPT=$(basename "$0")
VERSION="1.1.0"

# Display Help
Help() {
    echo
    echo "$SCRIPT"
    echo
    echo "Description: Install Odoo database in Docker container."
    echo "Syntax: $SCRIPT [-c|-d|-i|-l|-w|-V|help]"
    echo "Example: $SCRIPT -c odoo01 -d erp -i hr_timesheet,note -l de_CH -w"
    echo "options:"
    echo "  -c    Docker container. Defaults to 'odoo'."
    echo "  -d    Database name."
    echo "  -i    List of odoo modules to install."
    echo "  -l    Odoo language. Defaults to 'en_US'."
    echo "  -w    With demo data."
    echo "  -V    Show $SCRIPT version."
    echo "  help  Show $SCRIPT manual."
    echo
}

# Show help and exit
if [[ "$1" == "help" ]]; then
    Help
    exit
fi

# Set defaults
WITHOUT_DEMO="--without-demo=all"

# Process params
while getopts ":c: :d: :i: :l: :w :V" opt; do
    case $opt in
        c) CONTAINER="$OPTARG";;
        d) DATABASE="$OPTARG";;
        i) MODULES="$OPTARG";;
        l) ODOO_LANGUAGE="$OPTARG";;
        w) WITHOUT_DEMO="";;
        V) echo "$SCRIPT version $VERSION"
        exit 0
        ;;
        \?) echo "Invalid option -$OPTARG" >&2
        Help
        exit;;
    esac
done

# Fallback to environment vars and default values
: ${CONTAINER:='odoo'}
: ${ODOO_LANGUAGE:='en_US'}

# Verify variables
[[ -z "$DATABASE" ]] && { echo "Parameter -d|database is empty" ; exit 1; }
[[ -z "$MODULES" ]] && { echo "Parameter -i|init is empty" ; exit 1; }

# Switch container name with id
CONTAINER_ID=$(docker ps -f "name=${CONTAINER}" -q | tail -n1)
[[ -z "$CONTAINER_ID" ]] && { echo "Container id for $CONTAINER not found." ; exit 1; }

# Init modules on database
echo "Initializing modules $MODULES with langague $ODOO_LANGUAGE on database $DATABASE."
docker exec $CONTAINER_ID /bin/bash -c "odoo -i $MODULES -d $DATABASE --db_host=\$HOST --db_user=\$USER --db_password=\$PASSWORD $WITHOUT_DEMO --load-language $ODOO_LANGUAGE --stop-after-init --no-http"

echo "Modules initialized. Please restart the Odoo container/process."