#!/usr/bin/env bash
set -e

# Get script name
script=$(basename "$0")
version="1.1.0"

# Display Help
help() {
    echo
    echo "$script"
    echo
    echo 'Description: Install Odoo database in Docker container.'
    echo "Syntax: $script [-c|-d|-i|-l|-w|-V|help]"
    echo 'Example: $script -c odoo01 -d erp -i hr_timesheet,note -l de_CH -w'
    echo 'options:'
    echo '  -c    Docker container. Defaults to '\''odoo'\''.'
    echo '  -d    Database name.'
    echo '  -i    List of odoo modules to install.'
    echo '  -l    Odoo language. Defaults to '\''en_US'\''.'
    echo '  -w    With demo data.'
    echo '  -V    Show $script version.'
    echo '  help  Show $script manual.'
    echo
}

# Show help and exit
if [[ "$1" == 'help' ]]; then
    help
    exit
fi

# Set defaults
without_demo='--without-demo=all'

# Process params
while getopts ':c: :d: :i: :l: :w :V' opt; do
    case $opt in
        c) container="$OPTARG";;
        d) database="$OPTARG";;
        i) modules="$OPTARG";;
        l) odoo_language="$OPTARG";;
        w) without_demo='';;
        V) echo "$script version $version"
        exit 0
        ;;
        \?) echo "Invalid option -$OPTARG" >&2
        help
        exit;;
    esac
done

# Fallback to environment vars and default values
: "${container:=odoo}"
: "${odoo_language:=en_US}"

# Verify variables
[[ -z "$database" ]] && { echo 'Parameter -d|database is empty' ; exit 1; }
[[ -z "$modules" ]] && { echo 'Parameter -i|init is empty' ; exit 1; }

# Switch container name with id
container_id=$(docker ps -f "name=^${container}" -q | tail -n1)
[[ -z "$container_id" ]] && { echo "Container id for $container not found." ; exit 1; }

# Init modules on database
echo "Initializing modules $modules with langague $odoo_language on database $database."
docker exec $container_id /bin/bash -c "odoo -i $modules -d $database --db_host=\$HOST --db_user=\$USER --db_password=\$PASSWORD $without_demo --load-language $odoo_language --stop-after-init --no-http"

echo 'Modules initialized. Please restart the Odoo container/process.'
