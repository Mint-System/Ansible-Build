#!/bin/bash
set -e

# Get script name
SCRIPT=$(basename "$0")
VERSION="1.0.0"

# Display Help
Help() {
    echo
    echo "$SCRIPT"
    echo
    echo "Description: Install Odoo database in Docker container."
    echo "Syntax: $SCRIPT [-c|-d|-i|-w|-v|help]"
    echo "Example: $SCRIPT -c odoo01 -d erp -i hr_timesheet -w all"
    echo "options:"
    echo "  -c    Docker container. Defaults to 'odoo'."
    echo "  -d    Database name. Defaults to 'odoo'."
    echo "  -i    List of odoo modules. Defaults to 'base'."
    echo "  -w    Without demo data."
    echo "  -v    Show $SCRIPT version."
    echo "  help  Show $SCRIPT manual."
    echo
}

# Show help and exit
if [[ $1 == 'help' ]]; then
    Help
    exit
fi

# Process params
while getopts ":c: :d: :i: :w: :v" opt; do
    case $opt in
        c) CONTAINER="$OPTARG";;
        d) DATABASE="$OPTARG";;
        i) MODULES="$OPTARG";;
        w) WITHOUT_DEMO="--without-demo=$OPTARG";;
        v) echo "$SCRIPT version $VERSION"
        exit 0
        ;;
        \?) echo "Invalid option -$OPTARG" >&2
        Help
        exit;;
    esac
done

# Fallback to environment vars and default values
: ${DATABASE:='odoo'}
: ${CONTAINER:='odoo'}
: ${MODULES:='base'}

# Switch container name with id
CONTAINER=$(docker ps -f "name=$CONTAINER" -q | tail -n1)

# Set alias
docker_exec_bash="docker exec $CONTAINER /bin/bash -c"

# Install modules on database
echo "Install modules $MODULES on database $DATABASE on container $CONTAINER."
$docker_exec_bash "odoo -c /etc/odoo/odoo.conf -i $MODULES -d $DATABASE --db_host \$HOST -r \$USER -w \$PASSWORD $WITHOUT_DEMO --stop-after-init --no-http"
