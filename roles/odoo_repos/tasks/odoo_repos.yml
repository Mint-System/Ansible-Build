---
- name: Get Odoo version from revision
  ansible.builtin.set_fact:
    odoo_version: "{{ odoo_revision | regex_search('^[0-9][0-9]\\.[0-9]') }}"

- name: Show Odoo version
  ansible.builtin.debug:
    msg: "Odoo version: {{ odoo_version }}"

- name: Ensure {{ role_name }} dir exists
  ansible.builtin.file:
    path: "{{ odoo_data_dir }}/{{ item.path }}"
    state: directory
    owner: "{{ odoo_owner }}"
    group: "{{ odoo_group }}"
  loop: "{{ odoo_repos }}"

- name: Pull repo branch with ssh
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{{ odoo_data_dir }}/{{ item.path }}"
    key_file: "{{ odoo_repo_key_file }}"
    version: "{{ odoo_version }}"
    single_branch: "{{ item.single_branch | default(true) }}"
    accept_hostkey: true
    force: true
  when:
    - item.url is regex('git@') and odoo_repo_key_file is defined
  loop: "{{ odoo_repos }}"
  notify: Restart odoo container

- name: Checkout repo commit with ssh
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{{ odoo_data_dir }}/{{ item.path }}"
    key_file: "{{ odoo_repo_key_file }}"
    version: "{{ item.version | default(odoo_version) }}"
    refspec: +refs/heads/{{ item.branch | default(odoo_version) }}:refs/remotes/origin/{{ item.branch | default(odoo_version) }}
    accept_hostkey: true
    force: true
  when:
    - item.url is regex('git@') and odoo_repo_key_file is defined
    - item.sparse_dirs is not defined
  loop: "{{ odoo_repos }}"

- name: Shallow ssh clone with sparse checkout
  shell: |
    set -e
    git init "{{ odoo_data_dir }}/{{ item.path }}"
    cd "{{ odoo_data_dir }}/{{ item.path }}"
    git config core.sshCommand "ssh -i '{{ odoo_repo_key_file }}' -o IdentitiesOnly=yes -o StrictHostKeyChecking=no"
    git config core.sparseCheckout true
    echo "{{ item.sparse_dirs | join('\n') }}" > .git/info/sparse-checkout
    git remote add origin "{{ item.url }}"
    git fetch --depth=1 origin "{{ item.version | default(odoo_version) }}"
    git checkout FETCH_HEAD
  args:
    creates: "{{ odoo_data_dir }}/{{ item.path }}/.git"
  when:
    - item.url is regex('^git@')
    - item.sparse_dirs is defined
    - odoo_repo_key_file is defined
  loop: "{{ odoo_repos }}"

- name: Pull repo branch with http
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{{ odoo_data_dir }}/{{ item.path }}"
    version: "{{ odoo_version }}"
    single_branch: "{{ item.single_branch | default(true) }}"
    accept_hostkey: true
    force: true
  when:
    - item.url is regex('https://')
    - item.sparse_dirs is not defined
  loop: "{{ odoo_repos }}"
  notify: Restart odoo container

- name: Checkout repo commit with http
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{{ odoo_data_dir }}/{{ item.path }}"
    version: "{{ item.version | default(odoo_version) }}"
    single_branch: "{{ item.single_branch | default(true) }}"
    accept_hostkey: true
    force: true
  when:
    - item.url is regex('https://')
    - item.sparse_dirs is not defined
  loop: "{{ odoo_repos }}"

- name: Shallow http clone with sparse checkout
  shell: |
    set -e
    git init "{{ odoo_data_dir }}/{{ item.path }}" && \
    cd "{{ odoo_data_dir }}/{{ item.path }}" && \
    git config core.sparseCheckout true && \
    echo "{{ item.sparse_dirs | join('\n') }}" > .git/info/sparse-checkout && \
    git remote add origin "{{ item.url }}" && \
    git fetch --depth=1 origin "{{ item.version | default(odoo_version) }}" && \
    git checkout FETCH_HEAD
  args:
    chdir: "{{ odoo_data_dir }}"
    creates: "{{ odoo_data_dir }}/{{ item.path }}/.git"
  when:
    - item.url is regex('https://')
    - item.sparse_dirs is defined
  loop: "{{ odoo_repos }}"

- name: Add repo to git config
  community.general.git_config:
    name: safe.directory
    scope: global
    add_mode: add
    value: "{{ odoo_data_dir }}/{{ item.path }}"
  loop: "{{ odoo_repos }}"
