#!/bin/bash
set -e
SCRIPT=$(basename "$0")

Help() {
    echo
    echo "$SCRIPT"
    echo
    echo "Description: Request Certbot certificate."
    echo "Syntax: $SCRIPT [-c|-d|-e|help]"
    echo "Example: $SCRIPT -c odoo.example.com -d /usr/share/certbot01 -e sysadmin@example.com -s https://acme.zerossl.com/v2/DV90" -v
    echo "options:"
    echo "  -c    Certificate name."
    echo "  -d    Certbot data dir."
    echo "  -e    Mail address."
    echo "  -s    Alternate acme server."
    echo "  -t    Execute dry run."
    echo "  -v    Show more details."
    echo "  help  Show $SCRIPT manual."
    echo
}

if [[ "$1" == "help" ]]; then
    Help
    exit
fi

# Default values
OPTION=""
SERVER=""
VERBOSE=""

# Process params
while getopts ":c: :d: :e: :s: :t :v" opt; do
  case $opt in
    c) CERTIFICATE="$OPTARG"
    ;;
    d) CERTBOT_DATA_DIR="$OPTARG"
    ;;
    e) CERTBOT_EMAIL="$OPTARG"
    ;;
    e) SERVER="$OPTARG"
    ;;
    t) OPTION="--dry-run"
    ;;
    v) VERBOSE="-v"
    ;;
    \?) echo "Invalid option -$OPTARG" >&2
    Help
    exit 1;;
  esac
done

# Verify variables
[[ -z "$CERTIFICATE" ]] && { echo "Parameter -c|certificate is empty" ; exit 1; }
[[ -z "$CERTBOT_DATA_DIR" ]] && { echo "Parameter -d|certbot data dir is empty" ; exit 1; }

echo "Request certificate $CERTIFICATE ..."

if [[ -n "$SERVER" ]]; then
  SERVER_OPTION="--server $SERVER"
else
  SERVER_OPTION=""
fi

if [[ -n "$CERTBOT_EMAIL" ]]; then
  EMAIL_OPTION="--email $CERTBOT_EMAIL"
else
  EMAIL_OPTION="--register-unsafely-without-email"
fi
  
docker run --rm --name "${CERTIFICATE}-tmp" \
-v /var/log/letsencrypt/:/var/log/letsencrypt/ \
-v $CERTBOT_DATA_DIR/:/etc/letsencrypt/ \
-v $CERTBOT_DATA_DIR/www/:/var/www/certbot/ \
certbot/certbot \
certonly $EMAIL_OPTION --non-interactive --agree-tos --webroot --webroot-path=/var/www/certbot/ -d $CERTIFICATE $SERVER_OPTION $OPTION $VERBOSE
