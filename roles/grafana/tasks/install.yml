- name: Create grafana volume
  docker_volume:
    name: "{{ grafana_volume_name }}"
  when: grafana_volume_name is defined

- name: Ensure grafana data dir exists
  file:
    path: "{{ grafana_data_dir }}"
    state: directory
  when: grafana_data_dir is defined

- name: Copy grafana conf
  template:
    src: "templates/{{ item }}"
    dest: "{{ grafana_data_dir }}/{{ item }}"
  loop:
    - datasource.yml
    - dashboard.yml
  notify: Restart grafana container

- name: "Start grafana container {{ grafana_hostname }}"
  docker_container:
    name: "{{ grafana_hostname }}"
    labels:
      description: "{{ grafana_description }}"
    image: "{{ grafana_image }}"
    restart_policy: unless-stopped
    recreate: no
    env:
      GF_SECURITY_ADMIN_USER: "{{ grafana_admin_user }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_SMTP_ENABLED: "true"
      GF_SMTP_HOST: "{{ grafana_mail_hostname }}"
      GF_SMTP_USER: "{{ grafana_mail_username }}"
      GF_SMTP_PASSWORD: "{{ grafana_mail_password }}"
      GF_SMTP_FROM_ADDRESS: "{{ grafana_mail_from }}"
      GF_SMTP_FROM_NAME: "{{ grafana_mail_from_name }}"
    volumes:
      - "{{ grafana_volume_name }}:/var/lib/grafana"
      - "{{ grafana_data_dir }}/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml"
      - "{{ grafana_data_dir }}/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "{{ docker_log_driver }}"
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"
